{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/pasted-0.png","path":"images/pasted-0.png","modified":0,"renderable":0},{"_id":"source/images/pasted-2.png","path":"images/pasted-2.png","modified":0,"renderable":0},{"_id":"source/images/pasted-1.png","path":"images/pasted-1.png","modified":0,"renderable":0},{"_id":"themes/clean-blog/source/css/article.styl","path":"css/article.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/css/base.styl","path":"css/base.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/css/mixins.styl","path":"css/mixins.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/css/variables.styl","path":"css/variables.styl","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/img/about-bg.jpg","path":"img/about-bg.jpg","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/img/home-bg.jpg","path":"img/home-bg.jpg","modified":0,"renderable":1},{"_id":"themes/clean-blog/source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/clean-blog/LICENSE","hash":"34ac5e147727699d1bbc346b014f2e0bdfbb0947","modified":1558687657825},{"_id":"themes/clean-blog/README.md","hash":"779e999931169acdbabf43ab0e70471e8631583a","modified":1558687657826},{"_id":"themes/clean-blog/_config.yml","hash":"026656d0faa8520ab5deb4a76e8a0d302c082b67","modified":1558778370939},{"_id":"source/categories/index-1.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1558778460080},{"_id":"source/categories/index.md","hash":"e015fc631f4c9626988cbbd9dad24f0d081e82a2","modified":1558778196461},{"_id":"source/_posts/H5各种头部meta标签功能大全.md","hash":"8af74e1fc2bd59d5215f187d0ef92a04edb866a5","modified":1559188381136},{"_id":"source/_posts/vue.md","hash":"47280aee2822b26052e86b2209da16b8c20f968e","modified":1561978113630},{"_id":"source/_posts/hello-world.md","hash":"726a861795af56e09ff6533e86d3f7d3c16548ac","modified":1558776778845},{"_id":"source/_posts/于-vue-axios的封装.md","hash":"43bbf07e31de05117d5c789058c95b5927ce4a05","modified":1564457393526},{"_id":"source/_posts/关于vue时间戳的封装.md","hash":"def8d0aa5b648c81928c0819f78acae41357c040","modified":1564456461052},{"_id":"source/_posts/于vueX的状态管理.md","hash":"23c41a9243da614ec0a04b4aac6aea379df43498","modified":1564457560419},{"_id":"source/about/index.md","hash":"405ec1ebfaa0d60bc233882fd6c5827229f8d2c4","modified":1559188525634},{"_id":"source/tags/index.md","hash":"097d820ce5433800dafb5a3ded1985fabb282331","modified":1558778229760},{"_id":"source/images/pasted-0.png","hash":"a260f4dc15ed3ddc60375aa77b00b47485aa86d0","modified":1564456214473},{"_id":"source/images/pasted-2.png","hash":"8664eff8d18483cfb53ac28e16e29ef422af29e4","modified":1564456357720},{"_id":"source/images/pasted-1.png","hash":"f7a78add8dc033f14465417dd647f171580c2b85","modified":1564455915932},{"_id":"themes/clean-blog/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1558687657799},{"_id":"themes/clean-blog/.git/config","hash":"9d17f2a261a16d99780c56d35cf02da6578d0a57","modified":1558687657812},{"_id":"themes/clean-blog/.git/index","hash":"009ef1d51b18247c7740d74c072e94ac36904b17","modified":1564537274159},{"_id":"themes/clean-blog/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1558687652343},{"_id":"themes/clean-blog/.git/packed-refs","hash":"fba1ead142d0fa72d1719f33217766c44ead39e7","modified":1558687657779},{"_id":"themes/clean-blog/languages/de.yml","hash":"02a98ba2b93e30a00ae7979fbe90b767a27290f0","modified":1558687657828},{"_id":"themes/clean-blog/languages/default.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1558687657829},{"_id":"themes/clean-blog/languages/en.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1558687657830},{"_id":"themes/clean-blog/languages/es.yml","hash":"fb089145368422ac47da9eb00fed05b15c904aa2","modified":1558687657830},{"_id":"themes/clean-blog/languages/fr.yml","hash":"10e3529b8492d7a7601d5b35b44d8fc9e8ea8d1b","modified":1558687657831},{"_id":"themes/clean-blog/languages/ko.yml","hash":"b52f84a08d877b545751441c45a1961105eb4372","modified":1558687657832},{"_id":"themes/clean-blog/languages/no.yml","hash":"5ce3a1043ff85cecf83f3b5b0cdad2df44fa0192","modified":1558687657832},{"_id":"themes/clean-blog/languages/pl.yml","hash":"6dc5d1b2aa75ae4c527089a770f43bafb91d80f4","modified":1558687657833},{"_id":"themes/clean-blog/languages/ru.yml","hash":"2cfaf93704ea4ac3f374c69bab89ca31916faa33","modified":1558687657835},{"_id":"themes/clean-blog/languages/pt.yml","hash":"6a31d548092af8af9f25d859063b0589c23ce13a","modified":1558687657834},{"_id":"themes/clean-blog/languages/zh-CN.yml","hash":"6d712d9eb6ba12213dcd76b532cd86e9da83cfa3","modified":1558687657835},{"_id":"themes/clean-blog/languages/zh-TW.yml","hash":"45c84384a05fdb7e32a3e2d498ea180be7dccfa9","modified":1558687657836},{"_id":"themes/clean-blog/layout/archive.ejs","hash":"c3aa4a76ee8b59b0e12ddbe951a9852176058eac","modified":1558692858847},{"_id":"themes/clean-blog/layout/index.ejs","hash":"07955d17ce226baabe9656c3e80daa7badd7251d","modified":1559627628526},{"_id":"themes/clean-blog/layout/layout.ejs","hash":"acc791dc4346c135ce4cac3cdeba6f96708115e5","modified":1558687657849},{"_id":"themes/clean-blog/layout/post.ejs","hash":"38382e9bbeb6b8d2eafbd53fff2984111f524c1a","modified":1558687657851},{"_id":"themes/clean-blog/layout/page.ejs","hash":"b585761947e289f0e37380780cfdebee0674c378","modified":1558687657850},{"_id":"themes/clean-blog/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1558687652344},{"_id":"themes/clean-blog/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1558687652345},{"_id":"themes/clean-blog/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1558687652346},{"_id":"themes/clean-blog/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1558687652348},{"_id":"themes/clean-blog/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1558687652347},{"_id":"themes/clean-blog/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1558687652351},{"_id":"themes/clean-blog/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1558687652349},{"_id":"themes/clean-blog/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1558687652353},{"_id":"themes/clean-blog/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1558687652352},{"_id":"themes/clean-blog/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1558687652354},{"_id":"themes/clean-blog/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1558687652355},{"_id":"themes/clean-blog/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1558687652357},{"_id":"themes/clean-blog/.git/logs/HEAD","hash":"aa85becbcff7b0ff5110502a32fa53c1b0a99fca","modified":1558687657804},{"_id":"themes/clean-blog/layout/_partial/article-archive.ejs","hash":"75b9b24c226eda4884752a868177b590d3e8b06f","modified":1558687657838},{"_id":"themes/clean-blog/layout/_partial/after-footer.ejs","hash":"f199b6e0039a7e9f840b8fbb9971fbd673ba5ce3","modified":1558687657838},{"_id":"themes/clean-blog/layout/_partial/article-categories.ejs","hash":"b494e4a50f63d66e545da449af18a7198a057bd6","modified":1558687657839},{"_id":"themes/clean-blog/layout/_partial/article-full.ejs","hash":"b71cc571f43127bc0307557a201b99e7eb015fc7","modified":1558687657840},{"_id":"themes/clean-blog/layout/_partial/article-index.ejs","hash":"ad112adf312337c60d436fdd127e948fe81b3dd1","modified":1558687657841},{"_id":"themes/clean-blog/layout/_partial/comments.ejs","hash":"5cafed11b6cfbf22e83674676c0edc6c4420cc0d","modified":1558687657842},{"_id":"themes/clean-blog/layout/_partial/article-tags.ejs","hash":"12524df0c1ce5136a8f88cea2fe550f9e1b47b19","modified":1558687657841},{"_id":"themes/clean-blog/layout/_partial/footer.ejs","hash":"e8b9d7f1f625e9176095ed21e816fcdb99f5d0b2","modified":1559628318579},{"_id":"themes/clean-blog/layout/_partial/gallery.ejs","hash":"15e9562d0f6146e25e22856693d1312cd3ade4af","modified":1558687657844},{"_id":"themes/clean-blog/layout/_partial/google-analytics.ejs","hash":"b287b7f66a53b51c7cd872ad1b15dfd20fb3e35d","modified":1558687657844},{"_id":"themes/clean-blog/layout/_partial/head.ejs","hash":"4587aa350c5071a8b575435803bd1dd21ad1d4fc","modified":1561976687165},{"_id":"themes/clean-blog/layout/_partial/menu.ejs","hash":"3c51a2a2f950ab2ca80f10d3d3941d5d8cd08ec7","modified":1558687657846},{"_id":"themes/clean-blog/layout/_partial/pagination.ejs","hash":"cd61e4dbbf6020ad094c8e66ec06e8c38ebcd122","modified":1558687657846},{"_id":"themes/clean-blog/layout/_partial/tag-category-index.ejs","hash":"008b4ed0b6fd6dc81bc0655ccc46e43eb310706b","modified":1558687657847},{"_id":"themes/clean-blog/source/css/article.styl","hash":"768418ecaa2ff17f6fa81d72096627e05579fe93","modified":1558687657852},{"_id":"themes/clean-blog/source/css/base.styl","hash":"e1f82072f2ebad6e1b298acc3eb274a64a97e412","modified":1559188223215},{"_id":"themes/clean-blog/source/css/mixins.styl","hash":"cf700a1c1c62b17d35a8f7500bf1a32d9bc6ab6a","modified":1558687657854},{"_id":"themes/clean-blog/source/css/style.styl","hash":"7200d572751c1f5888b3d0df25bf503a3f31ca2d","modified":1558687657855},{"_id":"themes/clean-blog/source/css/variables.styl","hash":"06e16f64020cbddf2c2c49ef45f940141a1b2ada","modified":1558687657856},{"_id":"themes/clean-blog/source/img/about-bg.jpg","hash":"d39126a6456f2bac0169d1779304725f179c9900","modified":1558687657857},{"_id":"themes/clean-blog/source/img/favicon.ico","hash":"e51abcde500b562be3e8091fb4e83013188a598e","modified":1558763365346},{"_id":"themes/clean-blog/.git/objects/00/1765f4d4d62e67fe093d30af6cd639f83af4a0","hash":"588e64516327516ea3e1fa69943a946f34038063","modified":1559628407773},{"_id":"themes/clean-blog/.git/objects/04/b89e6addd80aca9ee363e860e84563fe450cf5","hash":"13d7aed7ddc0453a99eefc85dea431ac7b8e05b2","modified":1559628407744},{"_id":"themes/clean-blog/.git/objects/0b/bd1677f20c7b08d52fb1b82df77c83c89555b5","hash":"c9676cec82ea4fdf1b0d7215fc2703948794a74d","modified":1559628407650},{"_id":"themes/clean-blog/.git/objects/08/a41a942fd6f34fa30f5d0ea0b38d5938751390","hash":"91e598e33062597ab46e6765d13d87b98a389b1d","modified":1559628407133},{"_id":"themes/clean-blog/.git/objects/0c/4b016250968d3224aa6bfdad8c0c66163783ac","hash":"d6892e401ed3c99349989991e5bb0d30a74c43b3","modified":1559628408222},{"_id":"themes/clean-blog/.git/objects/0a/7f563fa6b2fb6cb184a4d0bbc5b02eaef2732d","hash":"e789dcf79a07368a695d2e2a1534369560b3135b","modified":1559628407174},{"_id":"themes/clean-blog/.git/objects/0a/a5f3db2ba7c8b6d7ae4a5252c34bab4831b522","hash":"592a209b959c608254afbae2081350eda65ff4f4","modified":1559628408173},{"_id":"themes/clean-blog/.git/objects/0a/e03aede550eb4c411737fd661216e85123da3f","hash":"168fa269a3b76c818c9671f770c7423e04413a4d","modified":1559628408189},{"_id":"themes/clean-blog/.git/objects/10/35fb878f89b7591e7d4c27990575307b736857","hash":"0632d5f5236110d8930feb13c58f2584e76557d1","modified":1559628407141},{"_id":"themes/clean-blog/.git/objects/12/a3e341003ab32d82030828faea5e5778d538f7","hash":"de98df078f8255fd80b53a525001f41f717c519b","modified":1559628408185},{"_id":"themes/clean-blog/.git/objects/16/410e300e7b6d7b4b07e51a25b15e3ec75d6dfe","hash":"70adb076bd82682907eb8e0ac0f286e9c80b06e7","modified":1559628408211},{"_id":"themes/clean-blog/.git/objects/15/4ba80eb3d40b4c7fba1aadee92e8d67554c56e","hash":"58136e68a06817747be91245242d9a82630a075a","modified":1559628407196},{"_id":"themes/clean-blog/.git/objects/15/6fb69bc43c353dd82475e1ed15499b501f82c3","hash":"ffe161d4b1ed19a0ee47beeb473eb5505af7e1de","modified":1559628407757},{"_id":"themes/clean-blog/.git/objects/18/11e4aba35752ab68306ac53334f983dabfb09b","hash":"359c8325595db6f5dce09ff460892c10031c001a","modified":1559628408233},{"_id":"themes/clean-blog/.git/objects/19/0ec76f3799a90165314dfdd5d7eff79cb0053b","hash":"33f3e9f4284b2c2798acecb4f9df852f53917791","modified":1559628407655},{"_id":"themes/clean-blog/.git/objects/1b/af260d980146e94aba71d99209b667f54f20ba","hash":"72c43e4e864d96c11132dfe22e6042038485ac85","modified":1559628407753},{"_id":"themes/clean-blog/.git/objects/1d/34e64233660b5bd41bade34485b3808735664d","hash":"d4873270c5878c0d584e8cfe3c24be8bb95e5889","modified":1559628407229},{"_id":"themes/clean-blog/.git/objects/20/6c90c8228e1456f740b123b133dcf5d04acef6","hash":"444b96d249e5d85c7c1c77e4e77309fae0b6e1a5","modified":1559628406869},{"_id":"themes/clean-blog/.git/objects/20/a09c46c5e0189913e3cb613e4b525a21aba512","hash":"1dd3b2c6349612f53db407f96e06be9fb9fe4d7f","modified":1559628407685},{"_id":"themes/clean-blog/.git/objects/21/14c0d3e5b54d368f8ade540f54a9bdcb358ce1","hash":"a871caa6bdfb0e7ed084c99eebb3d9e2a69437f7","modified":1559628407253},{"_id":"themes/clean-blog/.git/objects/1e/3c293704e87b75ca064f8cc5a2d9e738082c3b","hash":"6ea0fb7d13e88cb2ab5af5d1e015981a49588822","modified":1559628407765},{"_id":"themes/clean-blog/.git/objects/1e/480f82844329ec3f5e3dbfbf442141bca283e2","hash":"511ea123696b9d4b9be181606682d3afebae8c26","modified":1559628408200},{"_id":"themes/clean-blog/.git/objects/22/74d91f1406e560f90f4fb42ce9b86fb75a2504","hash":"befe84795cc58d83b7f4129d5091b2ac83eb1e10","modified":1559628407699},{"_id":"themes/clean-blog/.git/objects/24/da080d62bc0c7aaf2d3db9ce182754bdb079ed","hash":"85991a44516a2fcf6172ccd2aa4eacaa69cc8c09","modified":1559628407145},{"_id":"themes/clean-blog/.git/objects/2c/e9b1873751e7a8cc956ed1342d98a5b4b9a75c","hash":"bb54aaccf96cd3c5b1d4dbd5c82010ecb4fb440b","modified":1559628407113},{"_id":"themes/clean-blog/.git/objects/2e/bafd52c9d99806234848551db20466943dc3aa","hash":"a29139a6f8cc6114bb0f78c822ea1637e5a3c736","modified":1559628407276},{"_id":"themes/clean-blog/.git/objects/2e/bee024f9f0a145ff94f7b160080bc89e4195ad","hash":"8441bda4b6569b2c8aabc4563cded4420c8c91ad","modified":1559628408024},{"_id":"themes/clean-blog/.git/objects/31/230255e2973671604f263152382986d0839b5c","hash":"d204fc97408438d78d3c0e97ba242380f8a4e554","modified":1559628408248},{"_id":"themes/clean-blog/.git/objects/31/2df55c314a0a7386d7c94df93d6a789b016733","hash":"8b4726fa5ae6152f3865a15b64c178eab298370b","modified":1559628408237},{"_id":"themes/clean-blog/.git/objects/32/0ea1582e0b6e8631fc3f9aa5fad3e34d38cf82","hash":"8476581b4ca9b3f8a3c9dc35c553751101f43095","modified":1559628407837},{"_id":"themes/clean-blog/.git/objects/32/8d7a5680426d722ffc6cc2f5e5b67d940a1591","hash":"7b733075f9d8ad01937c678b43cf3729f3e6990b","modified":1559628407730},{"_id":"themes/clean-blog/.git/objects/33/a2daf9fb2a5b0a48ab279e84273f4524e4a38b","hash":"b4dd067b2817eec50535d97b989d4331d44fc475","modified":1559628407734},{"_id":"themes/clean-blog/.git/objects/37/cbdcc05b9ba1f503d1b0f16e1c823b908a73d3","hash":"0808f856d13e261a86b50745d3302eea006fb98c","modified":1559628406887},{"_id":"themes/clean-blog/.git/objects/3a/4a0a0119f5492defc77b7ab146996891b25d97","hash":"8189a38c84d25b281cc0f1aa9852c166b15b1e4a","modified":1559628407208},{"_id":"themes/clean-blog/.git/objects/3c/88082f9cf07a117f98bb6e95886fbfce451c39","hash":"8dc77efbcc5c4e48416fe9af174eb88696e70305","modified":1559628407283},{"_id":"themes/clean-blog/.git/objects/3e/449effe452518746e08db3e99411cbebd2626b","hash":"403121c2d4e867faffbee3a6d07b7e5834fd93de","modified":1559628408229},{"_id":"themes/clean-blog/.git/objects/3e/4c5fdf0ac7ea19330f834ca1a94abfa8fc1e80","hash":"6605427e6c42f11d8cb2eefe86b55478e3a80b15","modified":1559628407166},{"_id":"themes/clean-blog/.git/objects/40/27e656ba20a513604c3bbb7a8517a6a61a6444","hash":"a71975536ac749fb891efae6723718cd3279c04f","modified":1559628407271},{"_id":"themes/clean-blog/.git/objects/40/51d51d4c92638c14b2b808261e3983df593168","hash":"6199a6bf7bca0a78bf946c250d5382ebad20d6d6","modified":1559628407234},{"_id":"themes/clean-blog/.git/objects/42/3d8c0a14fa0fed52405d317ab9f48c728777a3","hash":"42052ec9d25cda80471d5c42dc8784b46d2b759f","modified":1559628408251},{"_id":"themes/clean-blog/.git/objects/42/586d9f3f05043e671092954608583810d321f5","hash":"66e5d4159db61e137f94cec77a6aa7362e875f9c","modified":1559628407257},{"_id":"themes/clean-blog/.git/objects/48/2b7f701904b20fe81b354507e625bd7c5815b2","hash":"e15a5a5f646698d570b93d816de711e43ad3f147","modified":1559628406897},{"_id":"themes/clean-blog/.git/objects/48/47895a2bdccb9490569eb1a42b0c39f969c8c2","hash":"e1e744184dde4a3e3375d42a377ee1ea7915c143","modified":1559628407769},{"_id":"themes/clean-blog/.git/objects/4a/b09858fbc07aa06560694ca038abe6b5551a0a","hash":"c1615dfa67924c61b0b22920c337938a330677ad","modified":1559628407762},{"_id":"themes/clean-blog/.git/objects/4b/b6a408de5cc5621a19b008cc86d696e236a3f9","hash":"5abdab922ccee64c9b006a23582e7dd270198b64","modified":1559628407819},{"_id":"themes/clean-blog/.git/objects/4b/c76ddb164c2bc181aa8fcddeec27017eee6a93","hash":"4ae856084839fba7d044ae56a38582cd28d620cc","modified":1559628407213},{"_id":"themes/clean-blog/.git/objects/51/61b8cf4a1d7360e93cd4d6bd870c02a357d2dd","hash":"548a99b9dc6482891062d1fc065f4773a4072880","modified":1559628407170},{"_id":"themes/clean-blog/.git/objects/57/0e7ba661e29b1f20f41d0efa0775aa11db37df","hash":"9df92d770afbe940d023a29e6de40a9e6938a62b","modified":1559628406882},{"_id":"themes/clean-blog/.git/objects/57/a5ad519bf1da287ac19611d6054b9b623ab6a7","hash":"30168ffbd7e548652c7c3f5e6ba88834f2e5d625","modified":1559628407851},{"_id":"themes/clean-blog/.git/objects/58/2858dd4a424bba0ccb3d8d9b6a4894a58748f4","hash":"3199d12b8dd648869ef1536fcf236dcf1ac18ef2","modified":1559628408000},{"_id":"themes/clean-blog/.git/objects/5b/146c8efdf63cedd68b69c73f6cb4efd53c0c5e","hash":"c4230b245c60cb89eaf84c24001501afbaae618a","modified":1559628408169},{"_id":"themes/clean-blog/.git/objects/5e/9b4bf74e8cecc582459622deaf64083ae35e4f","hash":"08b57b307abefeff7a9e5b6c0e4a05ad88119016","modified":1559628408156},{"_id":"themes/clean-blog/.git/objects/5f/73e1d1414a0d7b81861523a2a90e1825a256ac","hash":"4a20e892f37b18092818ead1532ee10db90ee770","modified":1559628407200},{"_id":"themes/clean-blog/.git/objects/61/6054eadcb97cd38468e1a03281e5885b1641a6","hash":"51afcb5e2af71c4f08b14011bd2d6709f7518ab1","modified":1559628407813},{"_id":"themes/clean-blog/.git/objects/63/5c1497a2f5f4dc2ed55b5b514358a838c8ec1f","hash":"384b887656cec34104b69df0f45de33922e18289","modified":1559628406873},{"_id":"themes/clean-blog/.git/objects/62/6c8133830fde32408d857fde1c29e782b32ed2","hash":"499693642b0bf0d2e1ac518bcd9899f14d8466a1","modified":1559628408177},{"_id":"themes/clean-blog/.git/objects/64/235e01239cf5bedf817e893d886e29d6ebeedf","hash":"1dd61f502416dca65ddede93da75f66305ce9131","modified":1559628407109},{"_id":"themes/clean-blog/.git/objects/64/bf6dcbc71d8be2630124d7251bf266184d87fd","hash":"b93f6c88228c50c2dd3848070f8994ccf7f6d4de","modified":1559628408204},{"_id":"themes/clean-blog/.git/objects/65/ed6957aed8ed8e2f3b124888a0ec63b47cbb91","hash":"39bae20145293db7a7fabcbb539976cd606d9ea0","modified":1559628407183},{"_id":"themes/clean-blog/.git/objects/67/a13ed73ae1947d335493b4a4bb5f5c6c0e6549","hash":"dfae271fadb55bcea35e19ee2202317c32f2e05c","modified":1559628407098},{"_id":"themes/clean-blog/.git/objects/68/5658234b2ef9b6119014922a3e5f6732d35035","hash":"255c0256da3a301c227af894cc69ab903bdb6a5a","modified":1559628407216},{"_id":"themes/clean-blog/.git/objects/69/9b8e6bf51a8105ac76fac5584d52f90b658ba0","hash":"f4f464a11f4a6973a9bfd52c789236c62e971e5a","modified":1559628407221},{"_id":"themes/clean-blog/.git/objects/6a/b75ec0934430a4243891df7e4e8552005d42ea","hash":"39e9b825c2bbb88b8f109862b7cf1f4072f275e4","modified":1559628408193},{"_id":"themes/clean-blog/.git/objects/6a/f604f62240c4aa38d190e0d4fe315902cb8e74","hash":"8f142a0f4b38baeb9a2db36cdaa80e13b2a73d7b","modified":1559628407117},{"_id":"themes/clean-blog/.git/objects/6b/7535cec0479314a6d4a7a8625ecfa51958d26f","hash":"c553cdf1fe7cf99d191a483fb2caa505a99d4f4a","modified":1559628407725},{"_id":"themes/clean-blog/.git/objects/6b/4ed4b44e5e62244a5325ee377cf8829a29b36a","hash":"65f9760e64c6d2b4fc93f4696fab9d6c710cbc06","modified":1559628408257},{"_id":"themes/clean-blog/.git/objects/6b/cda240d05990b76df4e4829a37b0b12518a4c0","hash":"68b72348ab667d069b81be792d9e0fe1ab8c18c2","modified":1559628408141},{"_id":"themes/clean-blog/.git/objects/6d/8732afc92232ef92d96e1382b7fe0c34b77474","hash":"9c0c42832d8ea8c0c5a1bf3a2197e2a114a14723","modified":1559628407636},{"_id":"themes/clean-blog/.git/objects/6e/aefe4f6914282bcf97bed62f2b04b2f688005c","hash":"980d61717a87cd140ead60c23c5e795d4a781df6","modified":1559628407719},{"_id":"themes/clean-blog/.git/objects/71/3c670e32d7d8a0435a7a5df42b8d4061f155ee","hash":"7820d13ac889648d41d0ace8d34f99378949b026","modified":1559628407102},{"_id":"themes/clean-blog/.git/objects/74/9a6298f1b925e2be88e47d243654c1957ffd7d","hash":"ae71254e126fece595a920a5b3a23b458a8f799e","modified":1559628407125},{"_id":"themes/clean-blog/.git/objects/79/402fb5adde6ba53bb61e534c4e9c884fda7aeb","hash":"e7c467160e204e8ecee0991df167cc7804f370d6","modified":1559628408241},{"_id":"themes/clean-blog/.git/objects/79/b52f3683d3d465c1ff0480d7dc678c7a1a65a3","hash":"ead6303a1b834db2251720dc73f6078ba25c3b57","modified":1559628407157},{"_id":"themes/clean-blog/.git/objects/84/1957648681f0864d332e0cc17c6c8ccaf71326","hash":"11612fce0432c70323d8fdf04340d064460dde33","modified":1559628407089},{"_id":"themes/clean-blog/.git/objects/85/6d27d14ef5d8e84b0ab32f315cd013a6fe7741","hash":"36214e7acca12436d8654bbe8004367778840aad","modified":1559628407847},{"_id":"themes/clean-blog/.git/objects/89/2f87e150aed6db5f53f99430b068f505877b38","hash":"82588fd65b5d75d7999145bf623035beb69fad0b","modified":1559628407192},{"_id":"themes/clean-blog/.git/objects/8f/d1fdcb70812daec66194561ee29ecb2a452423","hash":"320136538088da347ef1729fc8fd485015239054","modified":1559628407121},{"_id":"themes/clean-blog/.git/objects/8b/2edd194e7f5fe218ee2531dc438b050d9b2a35","hash":"dd2b594981f3a852d4b6f6955eaa82d8382a94e6","modified":1559628407828},{"_id":"themes/clean-blog/.git/objects/91/1091826750a767d9adc9d92469b5230dde2a6b","hash":"266cf48a5fdb4389698a81020d27bfde805bf41b","modified":1559628407628},{"_id":"themes/clean-blog/.git/objects/92/732b1c7a6efb2836d4e4a5b50c642248aa2435","hash":"90a379af658e74a4a767cc876f25a6211812e689","modified":1559628407749},{"_id":"themes/clean-blog/.git/objects/97/1457a7166ef995530ceaed9ca5949fb4446c03","hash":"eef6be80596540da4d05d849d705899ece768da4","modified":1559628406877},{"_id":"themes/clean-blog/.git/objects/9a/e8a7dcc7bf8d0fa273445bec6900a8d39b6269","hash":"f5c8a7cf92f8bc426f1268afb178250d1c3992e5","modified":1559628407643},{"_id":"themes/clean-blog/.git/objects/9b/3142ff268f843be8c4f535e390c259979d15a5","hash":"26323559468857e7a423702ed10243602c5e88cb","modified":1558763410000},{"_id":"themes/clean-blog/.git/objects/a0/c304658553daf50dd4d567a1d03c55f4369056","hash":"a87f9e4f4d1f39007e9b5cc74d2d221c9d363c24","modified":1559628407679},{"_id":"themes/clean-blog/.git/objects/a2/ca1b322c7d512850454d43e1aec0c0f407f9e6","hash":"e2a67eb5d0fa98638673bad4fdd3c42b4fad4f93","modified":1559628407225},{"_id":"themes/clean-blog/.git/objects/a3/5e179c8579bbcf21f5da3310cf11d1bfaa6a24","hash":"125be010f54403b4eef692cdddbdfb9bdce0a21a","modified":1559628408215},{"_id":"themes/clean-blog/.git/objects/a4/45d7f064a80e7f7fa40cf9cc0ee974f92940c6","hash":"84a4b3e066cecf0e2b71ee13cf9652bcac11e295","modified":1559628408218},{"_id":"themes/clean-blog/.git/objects/a4/ed1d91ca3dae9d068e6ef18f23f7215cf33b20","hash":"152f8ed468118d66a905e7d002c901739e31a950","modified":1559628408261},{"_id":"themes/clean-blog/.git/objects/a6/49144af66139ac83fccef93f6e1052fa044a35","hash":"a0a898feab340e78adb64e67783822c72e2f51c7","modified":1559628407260},{"_id":"themes/clean-blog/.git/objects/a8/a6f7fe9d3b254c18010f09823a3b0d860bf908","hash":"b621ecfc7394d7385e0a887efa14d7ebf088b825","modified":1559628407268},{"_id":"themes/clean-blog/.git/objects/ab/12e0c8900fe1f7cf32841bd7d2706113b1232a","hash":"7cdbc63c15562bc41e19ecc32eeec856556b5987","modified":1559628407153},{"_id":"themes/clean-blog/.git/objects/ae/9551a36982fec3c98f4dfc8fc66dd3d31756dc","hash":"e78eb6862133e8818faa00b3937b98ad6a66964f","modified":1559628407810},{"_id":"themes/clean-blog/.git/objects/b0/aea4835c3017d775d4ae365080bc8931947b42","hash":"803dc8c4a1db8274524cf193b3a3d230d5433c4e","modified":1559628407714},{"_id":"themes/clean-blog/.git/objects/b3/c36283c7dc9e87c1c9784a7d87f17e07aa0dc4","hash":"4fe6c31414921e315a3119653e13650843a1fa0f","modified":1559628407021},{"_id":"themes/clean-blog/.git/objects/b3/567b1ae05f4038d7061f00c2dabf5038342533","hash":"b17b5541242aa5149def8c80c28c3687f9be5337","modified":1559628407204},{"_id":"themes/clean-blog/.git/objects/b7/97452281180c3eb3a3eb33eb8989162f100591","hash":"9d6bb919506cb409d4ac98f8d7b295a53f6a38c1","modified":1559628407823},{"_id":"themes/clean-blog/.git/objects/bb/670eada1c514297d75d07a0cee3ff18d9c2dea","hash":"65668808988fc4bf2fbf37fceb3d3c219449d53a","modified":1559628408226},{"_id":"themes/clean-blog/.git/objects/bf/d9cd8a45995bd2f6f26bef1ed83b2d1322b0d9","hash":"2ab9791b53e49c25d66e691d9862a1f83727de4b","modified":1559628406903},{"_id":"themes/clean-blog/.git/objects/c9/36b810ba2339aa41aa6a2c660d51b1468871aa","hash":"6e7c9a9fcea647a87ae7eb2034a70d9cc07dd62e","modified":1559628408197},{"_id":"themes/clean-blog/.git/objects/ca/b7d5d39ba45eec8cfceae525e9038613f8ce47","hash":"c43c2235f7576cdf920437c58adc5edb698de690","modified":1559628407709},{"_id":"themes/clean-blog/.git/objects/cd/d5a368a6922801892eb5e8005b84bddab663ff","hash":"2f220b648b645379bfaa13d85520ff9bc716bdf1","modified":1559628407279},{"_id":"themes/clean-blog/.git/objects/d2/2881d67965f3fb58e03bc9221daf6580c1d45d","hash":"39229c092c140f33e4e91332d81dc3472b684b47","modified":1559628406910},{"_id":"themes/clean-blog/.git/objects/d9/964e628b1e384d140055cb611b8cbedb79042b","hash":"d5ee9a586ddef2709425a6ea1330c366c04d5544","modified":1559628407249},{"_id":"themes/clean-blog/.git/objects/d7/62fc4426f73b73ff146a3039be18fc1b7fd26c","hash":"677050776fe14a1938528119de1dcd189061f7c4","modified":1559628408245},{"_id":"themes/clean-blog/.git/objects/da/dfdf120bb7b330fe3519af8cbf689dbee64226","hash":"b5903e9bcf6e817847d05c2ab13a694112f50276","modified":1559628407740},{"_id":"themes/clean-blog/.git/objects/db/88d7e54b779f23406696e20021b6f4bcf80d0f","hash":"b9df45423cd1ed6eaadc6c0f8ce9b7cbce4f55bc","modified":1559628407149},{"_id":"themes/clean-blog/.git/objects/e4/5c92821f5fdbadf2834981f5861b51d0be8ed6","hash":"e5560b4f3130a887308031989569f88d2a889338","modified":1559628407179},{"_id":"themes/clean-blog/.git/objects/dc/d84934581430017df26969675c9afaf0a11fbf","hash":"3c0bf42706aaccca59815dc02fed031c919fea51","modified":1559628407693},{"_id":"themes/clean-blog/.git/objects/e8/824cb7305e52531c24322330f03615a8cb4311","hash":"666d53224eebfab32f1dbb06346ae26e496f9cdc","modified":1559628407264},{"_id":"themes/clean-blog/.git/objects/f0/ad8728c6b98bb62fb9102d40390a43e9b2d4ea","hash":"0279222cd45e00c59c77068150f054d11e9ad738","modified":1559628407160},{"_id":"themes/clean-blog/.git/objects/ea/2fe12518fb3562800f6b0af437be8d0140bb7f","hash":"14ab1d0de8b166d898ce74493253d6cdb2a8fc70","modified":1559628407239},{"_id":"themes/clean-blog/.git/objects/f1/031aaf19224134a89bea2d4f0ced04314b79ec","hash":"5f467573e29a5da6cf3dab702b750fb06058af2f","modified":1559628407842},{"_id":"themes/clean-blog/.git/objects/f2/f672c241d5f0277bb8bba5e9254cb32a5da78d","hash":"413f49bf939f53c813dfc9b12f7cce7f0e3234ce","modified":1559628406892},{"_id":"themes/clean-blog/.git/objects/f3/b08aa568fff868397817e05f538ba8b0a7fd36","hash":"7463691c1694cca8f7c5b0dbf2717313637a56ea","modified":1559628408208},{"_id":"themes/clean-blog/.git/objects/f5/f2815c178616a3cfee5de6151f87e87df6a592","hash":"76b44b50f556e1b991dd2f397a6083a016050b01","modified":1559628408181},{"_id":"themes/clean-blog/.git/objects/f6/6166e7f34700d31958c3e27eadcb0d4a262089","hash":"eaf70afdccc35d933cecb2ff6ac3df15a86f305d","modified":1559628407662},{"_id":"themes/clean-blog/.git/objects/f6/c9e69c96b786d700b2671e6319354e1b175c7c","hash":"d0c959102135f67b553bba64221c3d800e801914","modified":1559628406915},{"_id":"themes/clean-blog/.git/objects/f6/cd7f9e9ef87429151d140e2c5931e0612efaac","hash":"4888fe226df38f4fe833530ad629c6433e93697d","modified":1559628407245},{"_id":"themes/clean-blog/.git/objects/f7/209780c2ad72a608a67a2c9619a2a5fdc943d4","hash":"785dbef0a86c6ea94d0d243fbf1251d0172cde19","modified":1559628407137},{"_id":"themes/clean-blog/.git/objects/f9/b23d81a1cbe80417eeacf3bedc590dafa7d804","hash":"daf8cb9f5816b1a646f847e62fc07a9763c73199","modified":1559628407704},{"_id":"themes/clean-blog/.git/objects/f9/cc4a908639af6e35f42a3b09cfccde77e6642f","hash":"704a8f936b54e632939bf7f12929c9c18c9a512b","modified":1559628407187},{"_id":"themes/clean-blog/.git/objects/fe/b469e2fb4f7722242c0277210aa82a08dc4bc3","hash":"0e948171021f72537cdd5545dc9ce5ecedc8799c","modified":1559628407129},{"_id":"themes/clean-blog/.git/objects/ff/d75cafc367a33341260ff8b0669acff62f43f5","hash":"ca5ac0376c4e64059f15921deece8bb929163c6e","modified":1559628407093},{"_id":"themes/clean-blog/.git/objects/pack/pack-1b5fed3b97025d99f28e87c43bc9962b2c233f0b.idx","hash":"0ab1c84ed65d18ad713f8000eefc3854c3d1b72f","modified":1558687657685},{"_id":"themes/clean-blog/.git/refs/heads/master","hash":"7a6bf9ae0acdca9883e6d11140773c62e865f04f","modified":1558687657803},{"_id":"themes/clean-blog/.git/objects/27/76a8207f9767f7baaaaaecbee1d886ec1dc16c","hash":"e4b5bf8e8edb8d4b6339aecbcce499389ed6a695","modified":1559628407016},{"_id":"themes/clean-blog/.git/objects/38/9f93892645a3f1580edb2c57e4491111264ebd","hash":"3dfa0cca0fbdc4e7822c33796085f3abaf5a3baa","modified":1559628407670},{"_id":"themes/clean-blog/.git/objects/e4/a2900be61df2781a3662f6b7d992997b1bd2f6","hash":"57ddf5631b5ecdb28ea2d9c4073d1bf28e30f788","modified":1559628408136},{"_id":"themes/clean-blog/.git/objects/fd/e8fba329d400d30e659a63549e6fe8c2632e74","hash":"bdb766c476f2f61007330a00b993125b14a37355","modified":1559628407085},{"_id":"themes/clean-blog/source/img/home-bg.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1558687657861},{"_id":"themes/clean-blog/.git/logs/refs/heads/master","hash":"aa85becbcff7b0ff5110502a32fa53c1b0a99fca","modified":1558687657805},{"_id":"themes/clean-blog/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1558687657796},{"_id":"themes/clean-blog/source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1558687657859},{"_id":"themes/clean-blog/.git/logs/refs/remotes/origin/HEAD","hash":"aa85becbcff7b0ff5110502a32fa53c1b0a99fca","modified":1558687657796},{"_id":"themes/clean-blog/.git/objects/c7/cea93104f2ac43707bb4831bce96c29c9eb9a3","hash":"203421778b15561b1f5142ae2d51a36d5c69fefd","modified":1559628406843},{"_id":"themes/clean-blog/.git/objects/5b/3a592499a85189a0ff349926d2c7db42ef03aa","hash":"7f3da7765ebf3b31598afd50d79e259ed03132f8","modified":1559628407621},{"_id":"themes/clean-blog/.git/objects/a1/1e1399473ca2c41d09ac6177b311bb14892b30","hash":"c50379e74b7a52154a211d9281515ddfdb202dc6","modified":1559628407000},{"_id":"themes/clean-blog/.git/objects/1c/7e84f03eecf042939224393b8d81dd6c4ad9a3","hash":"bedaf5010b226c93a7b2b3c7856d10ac86e829b2","modified":1559628407000},{"_id":"themes/clean-blog/.git/objects/1a/1a423eb40eb0eab41bf551db83bfdc3417c12c","hash":"9e1fc5bb44b04922bbf61a618730654272add47a","modified":1559628407590},{"_id":"themes/clean-blog/.git/objects/34/c612222a5dbf566973f22e483a24ead8739aab","hash":"3b740ef698fd6b3f09bd37e406a846bea6f858e5","modified":1559628407309},{"_id":"themes/clean-blog/.git/objects/c0/c70a9ba6b4d3c2454addfd378a85011423484a","hash":"772e7bf402012a1be8a21a8ab10e55265786ce7d","modified":1559628407515},{"_id":"themes/clean-blog/.git/objects/83/b4ebb03cab2f8af2f604be3726920858e2842b","hash":"39e88df04d1c9eaa41535d3e8c90034f9dfd59e5","modified":1559628407006},{"_id":"themes/clean-blog/.git/objects/43/2805ddef87e800a94f82fda0bffd6716365c5d","hash":"2765171231f76ca3f7a2b406396c6b58709bb0f7","modified":1559628407802},{"_id":"themes/clean-blog/.git/objects/cd/e7721caaa543c4ac3424f27514644d9ba6406d","hash":"b760e9b0358e364dfad800dbc7ba17dbcd4fb5c4","modified":1559628407076},{"_id":"themes/clean-blog/.git/objects/e7/a26e917836744967850931a3e7d6ebabd6da59","hash":"b013eb3c768d0fce8f7ce9b3f69f91722b90032e","modified":1559628407564},{"_id":"themes/clean-blog/.git/objects/59/60dde76a9e81c8e7e364e8717d94d3852e93e8","hash":"389770ad98860773495f9a0b2f88db4f6d6ee0a3","modified":1559628407380},{"_id":"themes/clean-blog/.git/objects/9e/e5a4713c17a427aa196a0e52c04f9282b03172","hash":"b754ea680ee04a8be763fd0d0fd18567bcd97fe7","modified":1559628407478},{"_id":"themes/clean-blog/.git/objects/pack/pack-1b5fed3b97025d99f28e87c43bc9962b2c233f0b.pack","hash":"458fc743e1950a5f2cc160ac4349d944b0ad27db","modified":1558687657695},{"_id":"themes/clean-blog/.git/objects/83/6f9e7ab84c3f6415cf792b7063ee99c2624265","hash":"05ea367168dea51a1410761cdba7dae741b6b67b","modified":1559628408126},{"_id":"public/baidusitemap.xml","hash":"7d081881374ed785e3e07c13477744677f499b76","modified":1564541307372},{"_id":"public/sitemap.xml","hash":"12d9b1ee685688c227b8e1748e8f315545b10b48","modified":1564541307373},{"_id":"public/categories/index-1.html","hash":"d71f130c13256237f1693b8ce7ccce75888560f4","modified":1564541307500},{"_id":"public/categories/index.html","hash":"026d6eca449ccba8ff1dd8ab076d9175cd49cbb9","modified":1564541307500},{"_id":"public/about/index.html","hash":"9947179accaa5da0a276aa4e2bfbc958156d3bc3","modified":1564541307504},{"_id":"public/tags/index.html","hash":"45a962992e2e0fe35f74ccd0f1103b7f1e2bf32a","modified":1564541307504},{"_id":"public/2019/07/30/于vueX的状态管理/index.html","hash":"ec6bb18aa44fb9842c76b3dea0d07472e94e05ee","modified":1564541307504},{"_id":"public/2019/07/01/vue/index.html","hash":"d65b5b5de058ffa5cdc072b5dced20205416841f","modified":1564541307504},{"_id":"public/2019/05/25/hello-world/index.html","hash":"61ac70d24e3cf7ee44ec68b8621e38bfd0014910","modified":1564541307504},{"_id":"public/archives/index.html","hash":"6e9fd0112e53644248c36b3eea40a59e647f77bc","modified":1564541307504},{"_id":"public/archives/2019/index.html","hash":"47d2699576c2a0c3cce6fda62a04256ede00bcd7","modified":1564541307504},{"_id":"public/archives/2019/05/index.html","hash":"c2bf9cd4740be6af62420e68ea9bb12ce8e3f8bc","modified":1564541307504},{"_id":"public/archives/2019/07/index.html","hash":"6e0de8831582eeaaf3b81341639f2ebab1b03860","modified":1564541307504},{"_id":"public/categories/meta/index.html","hash":"c02fd9d68ddde2d439ac46b44079ed1bfb33d558","modified":1564541307504},{"_id":"public/categories/关于鸡汤/index.html","hash":"84794c6345602712c03fdff5b46634a91f3eed94","modified":1564541307504},{"_id":"public/tags/技术/index.html","hash":"7e75759d315e8377b01a999b3814b36b3741d479","modified":1564541307504},{"_id":"public/categories/vue/index.html","hash":"aba547f5d91cc850612b50af794b71d045293863","modified":1564541307504},{"_id":"public/tags/生活/index.html","hash":"eb345352388d8eebbdf44f0133efff552ccdfcd5","modified":1564541307504},{"_id":"public/2019/07/30/于-vue-axios的封装/index.html","hash":"1162421c06668660b2c9285e4e352cc424db7a4f","modified":1564541307504},{"_id":"public/2019/07/30/关于vue时间戳的封装/index.html","hash":"591db4d1c6972d06cc5764b8e519de660cc0cbb1","modified":1564541307505},{"_id":"public/2019/05/30/H5各种头部meta标签功能大全/index.html","hash":"e5e8988c0104b9d61a816b88e80d27b4c0c1c7f0","modified":1564541307505},{"_id":"public/index.html","hash":"cc10c7434546fd70833cab84ab4a325d92316bf5","modified":1564541307506},{"_id":"public/images/pasted-0.png","hash":"a260f4dc15ed3ddc60375aa77b00b47485aa86d0","modified":1564541307507},{"_id":"public/images/pasted-1.png","hash":"f7a78add8dc033f14465417dd647f171580c2b85","modified":1564541307507},{"_id":"public/images/pasted-2.png","hash":"8664eff8d18483cfb53ac28e16e29ef422af29e4","modified":1564541307507},{"_id":"public/img/about-bg.jpg","hash":"d39126a6456f2bac0169d1779304725f179c9900","modified":1564541307507},{"_id":"public/img/favicon.ico","hash":"e51abcde500b562be3e8091fb4e83013188a598e","modified":1564541307507},{"_id":"public/css/style.css","hash":"2aa0767f68293a7901acbe7968703dd30e2d5f9f","modified":1564541307706},{"_id":"public/css/base.css","hash":"fae68586cec2e5be650b271f02f8de914129070d","modified":1564541307706},{"_id":"public/css/mixins.css","hash":"45146e7f4346351cd7f364de344aecf9574475f9","modified":1564541307707},{"_id":"public/css/article.css","hash":"f0ee490e1207191946fffc9444f891e9b7ae7289","modified":1564541307707},{"_id":"public/css/variables.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1564541307707},{"_id":"public/img/home-bg.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1564541307707},{"_id":"public/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1564541307720}],"Category":[{"name":"meta","_id":"cjyqnhyo50004w8u1ba1wxsao"},{"name":"关于鸡汤","_id":"cjyqnhyod0009w8u1dlpo2wwp"},{"name":"vue","_id":"cjyqnhyog000fw8u14r6y2iku"}],"Data":[],"Page":[{"_content":"","source":"categories/index-1.md","raw":"","date":"2019-05-25T10:01:00.080Z","updated":"2019-05-25T10:01:00.080Z","path":"categories/index-1.html","title":"","comments":1,"layout":"page","_id":"cjyqnhynj0000w8u1cek0jbht","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"All tags","type":"categories","_content":"","source":"categories/index.md","raw":"title: All tags\ntype: \"categories\"\n---\n","date":"2019-05-25T09:56:36.465Z","updated":"2019-05-25T09:56:36.461Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjyqnhynz0001w8u10gj9n0ra","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"222","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"about/index.md","raw":"---\ntitle: 222\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","date":"2019-05-30T03:55:25.642Z","updated":"2019-05-30T03:55:25.634Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjyqnhyou000lw8u11c9osdn5","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"All tags","type":"tags","_content":"","source":"tags/index.md","raw":"title: All tags\ntype: \"tags\"\n---\n","date":"2019-05-25T09:57:09.770Z","updated":"2019-05-25T09:57:09.760Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjyqnhyov000mw8u1d4pimqo8","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"（转）meta标签功能大全","author":"","date":"2019-05-30T03:37:00.000Z","_content":"``` bash\n<!DOCTYPE html>  H5标准声明，使用 HTML5 doctype，不区分大小写\n\n<head lang=”en”> 标准的 lang 属性写法\n\n<meta charset=’utf-8′>    声明文档使用的字符编码\n\n<meta http-equiv=”X-UA-Compatible” content=”IE=edge,chrome=1″/>   优先使用 IE 最新版本和 Chrome\n\n<meta name=”description” content=”不超过150个字符”/>       页面描述\n\n<meta name=”keywords” content=””/>      页面关键词\n\n<meta name=”author” content=”name, email@gmail.com”/>    网页作者\n\n<meta name=”robots” content=”index,follow”/>      搜索引擎抓取\n\n<meta name=”viewport” content=”initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no”> 为移动设备添加 viewport\n\n<meta name=”apple-mobile-web-app-title” content=”标题”> iOS 设备 begin\n\n<meta name=”apple-mobile-web-app-capable” content=”yes”/>  添加到主屏后的标题（iOS 6 新增）\n\n是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏\n\n<meta name=”apple-itunes-app” content=”app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL”>\n\n添加智能 App 广告条 Smart App Banner（iOS 6+ Safari）\n\n<meta name=”apple-mobile-web-app-status-bar-style” content=”black”/>\n\n<meta name=”format-detection” content=”telphone=no, email=no”/>  设置苹果工具栏颜色\n\n<meta name=”renderer” content=”webkit”>  启用360浏览器的极速模式(webkit)\n\n<meta http-equiv=”X-UA-Compatible” content=”IE=edge”>     避免IE使用兼容模式\n\n<meta http-equiv=”Cache-Control” content=”no-siteapp” />    不让百度转码\n\n<meta name=”HandheldFriendly” content=”true”>     针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓\n\n<meta name=”MobileOptimized” content=”320″>   微软的老式浏览器\n\n<meta name=”screen-orientation” content=”portrait”>   uc强制竖屏\n\n<meta name=”x5-orientation” content=”portrait”>    QQ强制竖屏\n\n<meta name=”full-screen” content=”yes”>              UC强制全屏\n\n<meta name=”x5-fullscreen” content=”true”>       QQ强制全屏\n\n<meta name=”browsermode” content=”application”>   UC应用模式\n\n<meta name=”x5-page-mode” content=”app”>    QQ应用模式\n\n<meta name=”msapplication-tap-highlight” content=”no”>    windows phone 点击无高光\n\n设置页面不缓存\n\n<meta http-equiv=”pragma” content=”no-cache”>\n\n<meta http-equiv=”cache-control” content=”no-cache”>\n\n<meta http-equiv=”expires” content=”0″>\n\n```\n","source":"_posts/H5各种头部meta标签功能大全.md","raw":"title: （转）meta标签功能大全\nauthor: ''\ntags:\n  - 技术\ncategories:\n  - meta\ndate: 2019-05-30 11:37:00\n---\n``` bash\n<!DOCTYPE html>  H5标准声明，使用 HTML5 doctype，不区分大小写\n\n<head lang=”en”> 标准的 lang 属性写法\n\n<meta charset=’utf-8′>    声明文档使用的字符编码\n\n<meta http-equiv=”X-UA-Compatible” content=”IE=edge,chrome=1″/>   优先使用 IE 最新版本和 Chrome\n\n<meta name=”description” content=”不超过150个字符”/>       页面描述\n\n<meta name=”keywords” content=””/>      页面关键词\n\n<meta name=”author” content=”name, email@gmail.com”/>    网页作者\n\n<meta name=”robots” content=”index,follow”/>      搜索引擎抓取\n\n<meta name=”viewport” content=”initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no”> 为移动设备添加 viewport\n\n<meta name=”apple-mobile-web-app-title” content=”标题”> iOS 设备 begin\n\n<meta name=”apple-mobile-web-app-capable” content=”yes”/>  添加到主屏后的标题（iOS 6 新增）\n\n是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏\n\n<meta name=”apple-itunes-app” content=”app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL”>\n\n添加智能 App 广告条 Smart App Banner（iOS 6+ Safari）\n\n<meta name=”apple-mobile-web-app-status-bar-style” content=”black”/>\n\n<meta name=”format-detection” content=”telphone=no, email=no”/>  设置苹果工具栏颜色\n\n<meta name=”renderer” content=”webkit”>  启用360浏览器的极速模式(webkit)\n\n<meta http-equiv=”X-UA-Compatible” content=”IE=edge”>     避免IE使用兼容模式\n\n<meta http-equiv=”Cache-Control” content=”no-siteapp” />    不让百度转码\n\n<meta name=”HandheldFriendly” content=”true”>     针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓\n\n<meta name=”MobileOptimized” content=”320″>   微软的老式浏览器\n\n<meta name=”screen-orientation” content=”portrait”>   uc强制竖屏\n\n<meta name=”x5-orientation” content=”portrait”>    QQ强制竖屏\n\n<meta name=”full-screen” content=”yes”>              UC强制全屏\n\n<meta name=”x5-fullscreen” content=”true”>       QQ强制全屏\n\n<meta name=”browsermode” content=”application”>   UC应用模式\n\n<meta name=”x5-page-mode” content=”app”>    QQ应用模式\n\n<meta name=”msapplication-tap-highlight” content=”no”>    windows phone 点击无高光\n\n设置页面不缓存\n\n<meta http-equiv=”pragma” content=”no-cache”>\n\n<meta http-equiv=”cache-control” content=”no-cache”>\n\n<meta http-equiv=”expires” content=”0″>\n\n```\n","slug":"H5各种头部meta标签功能大全","published":1,"updated":"2019-05-30T03:53:01.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjyqnhyo00002w8u1qkop78do","content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;  H5标准声明，使用 HTML5 doctype，不区分大小写</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head lang=”en”&gt; 标准的 lang 属性写法</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta charset=’utf-8′&gt;    声明文档使用的字符编码</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge,chrome=1″/&gt;   优先使用 IE 最新版本和 Chrome</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”description” content=”不超过150个字符”/&gt;       页面描述</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”keywords” content=””/&gt;      页面关键词</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”author” content=”name, email@gmail.com”/&gt;    网页作者</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”robots” content=”index,follow”/&gt;      搜索引擎抓取</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”viewport” content=”initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no”&gt; 为移动设备添加 viewport</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”apple-mobile-web-app-title” content=”标题”&gt; iOS 设备 begin</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”apple-mobile-web-app-capable” content=”yes”/&gt;  添加到主屏后的标题（iOS 6 新增）</span><br><span class=\"line\"></span><br><span class=\"line\">是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”apple-itunes-app” content=”app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL”&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">添加智能 App 广告条 Smart App Banner（iOS 6+ Safari）</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”apple-mobile-web-app-status-bar-style” content=”black”/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”format-detection” content=”telphone=no, email=no”/&gt;  设置苹果工具栏颜色</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”renderer” content=”webkit”&gt;  启用360浏览器的极速模式(webkit)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge”&gt;     避免IE使用兼容模式</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”Cache-Control” content=”no-siteapp” /&gt;    不让百度转码</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”HandheldFriendly” content=”<span class=\"literal\">true</span>”&gt;     针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”MobileOptimized” content=”320″&gt;   微软的老式浏览器</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”screen-orientation” content=”portrait”&gt;   uc强制竖屏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”x5-orientation” content=”portrait”&gt;    QQ强制竖屏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”full-screen” content=”yes”&gt;              UC强制全屏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”x5-fullscreen” content=”<span class=\"literal\">true</span>”&gt;       QQ强制全屏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”browsermode” content=”application”&gt;   UC应用模式</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”x5-page-mode” content=”app”&gt;    QQ应用模式</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”msapplication-tap-highlight” content=”no”&gt;    windows phone 点击无高光</span><br><span class=\"line\"></span><br><span class=\"line\">设置页面不缓存</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”pragma” content=”no-cache”&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”cache-control” content=”no-cache”&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”expires” content=”0″&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;  H5标准声明，使用 HTML5 doctype，不区分大小写</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head lang=”en”&gt; 标准的 lang 属性写法</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta charset=’utf-8′&gt;    声明文档使用的字符编码</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge,chrome=1″/&gt;   优先使用 IE 最新版本和 Chrome</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”description” content=”不超过150个字符”/&gt;       页面描述</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”keywords” content=””/&gt;      页面关键词</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”author” content=”name, email@gmail.com”/&gt;    网页作者</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”robots” content=”index,follow”/&gt;      搜索引擎抓取</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”viewport” content=”initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no”&gt; 为移动设备添加 viewport</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”apple-mobile-web-app-title” content=”标题”&gt; iOS 设备 begin</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”apple-mobile-web-app-capable” content=”yes”/&gt;  添加到主屏后的标题（iOS 6 新增）</span><br><span class=\"line\"></span><br><span class=\"line\">是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”apple-itunes-app” content=”app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL”&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">添加智能 App 广告条 Smart App Banner（iOS 6+ Safari）</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”apple-mobile-web-app-status-bar-style” content=”black”/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”format-detection” content=”telphone=no, email=no”/&gt;  设置苹果工具栏颜色</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”renderer” content=”webkit”&gt;  启用360浏览器的极速模式(webkit)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge”&gt;     避免IE使用兼容模式</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”Cache-Control” content=”no-siteapp” /&gt;    不让百度转码</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”HandheldFriendly” content=”<span class=\"literal\">true</span>”&gt;     针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”MobileOptimized” content=”320″&gt;   微软的老式浏览器</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”screen-orientation” content=”portrait”&gt;   uc强制竖屏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”x5-orientation” content=”portrait”&gt;    QQ强制竖屏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”full-screen” content=”yes”&gt;              UC强制全屏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”x5-fullscreen” content=”<span class=\"literal\">true</span>”&gt;       QQ强制全屏</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”browsermode” content=”application”&gt;   UC应用模式</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”x5-page-mode” content=”app”&gt;    QQ应用模式</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=”msapplication-tap-highlight” content=”no”&gt;    windows phone 点击无高光</span><br><span class=\"line\"></span><br><span class=\"line\">设置页面不缓存</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”pragma” content=”no-cache”&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”cache-control” content=”no-cache”&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta http-equiv=”expires” content=”0″&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"vue自定义组件","author":"葛亮均","date":"2019-07-01T10:39:00.000Z","_content":"``` bash\nvue自定义公共组件\n\n我们在编写页面的时候,会存在公共的组件,比如头部和底部菜单\n\n我们拿公共头部为例子,想在每个页面都显示公共头部的实现方式有两种\n\n在src/components目录创建目录 common, 再创建header.vue\n\nheader.vue的片段代码为\n<template>\n    <div>\n        <h1>header in here</h1>\n    </div>\n</template>\n<script>\n    export default{}\n</script>\n\n(1)全局挂载组件\n在main.js里挂载,通过Vue.component方式\n\nimport headerTop from \"xxx/components/common/header\"   //引入组件\n\nVue.component(\"head-view\",headerTop);\n //第一个参数表示 head-view标签的内容都用第二个参数headerTop来代替\n\n然后在需要使用的vue文件中引入头部的话,只需要加入 <head-view></head-view>标签\n\n\n(2)局部引入,需要用的时候才引入使用\n在需要使用的VUE文件中引入头部:\n代码片段\n<template>\n<headerTopNav></headerTopNav>\n</template>\n\n<script>\n import headerTopNav from 'xxx/components/common/header'  //引入组件\n\nexport default{\ncomponents: {headerTopNav} //表示headerTopNav标签的内容被headerTopNav组件代替\n}\n</script>\n--------------------- \n作者：Hobart-Ljw \n来源：CSDN \n原文：https://blog.csdn.net/baidu_32809053/article/details/80417783 \n版权声明：本文为博主原创文章，转载请附上博文链接！\n\n```\n","source":"_posts/vue.md","raw":"title: vue自定义组件\nauthor: 葛亮均\ntags:\n  - 技术\ncategories: []\ndate: 2019-07-01 18:39:00\n---\n``` bash\nvue自定义公共组件\n\n我们在编写页面的时候,会存在公共的组件,比如头部和底部菜单\n\n我们拿公共头部为例子,想在每个页面都显示公共头部的实现方式有两种\n\n在src/components目录创建目录 common, 再创建header.vue\n\nheader.vue的片段代码为\n<template>\n    <div>\n        <h1>header in here</h1>\n    </div>\n</template>\n<script>\n    export default{}\n</script>\n\n(1)全局挂载组件\n在main.js里挂载,通过Vue.component方式\n\nimport headerTop from \"xxx/components/common/header\"   //引入组件\n\nVue.component(\"head-view\",headerTop);\n //第一个参数表示 head-view标签的内容都用第二个参数headerTop来代替\n\n然后在需要使用的vue文件中引入头部的话,只需要加入 <head-view></head-view>标签\n\n\n(2)局部引入,需要用的时候才引入使用\n在需要使用的VUE文件中引入头部:\n代码片段\n<template>\n<headerTopNav></headerTopNav>\n</template>\n\n<script>\n import headerTopNav from 'xxx/components/common/header'  //引入组件\n\nexport default{\ncomponents: {headerTopNav} //表示headerTopNav标签的内容被headerTopNav组件代替\n}\n</script>\n--------------------- \n作者：Hobart-Ljw \n来源：CSDN \n原文：https://blog.csdn.net/baidu_32809053/article/details/80417783 \n版权声明：本文为博主原创文章，转载请附上博文链接！\n\n```\n","slug":"vue","published":1,"updated":"2019-07-01T10:48:33.630Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjyqnhyo30003w8u15kk4sj2m","content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue自定义公共组件</span><br><span class=\"line\"></span><br><span class=\"line\">我们在编写页面的时候,会存在公共的组件,比如头部和底部菜单</span><br><span class=\"line\"></span><br><span class=\"line\">我们拿公共头部为例子,想在每个页面都显示公共头部的实现方式有两种</span><br><span class=\"line\"></span><br><span class=\"line\">在src/components目录创建目录 common, 再创建header.vue</span><br><span class=\"line\"></span><br><span class=\"line\">header.vue的片段代码为</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h1&gt;header <span class=\"keyword\">in</span> here&lt;/h1&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"built_in\">export</span> default&#123;&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">(1)全局挂载组件</span><br><span class=\"line\">在main.js里挂载,通过Vue.component方式</span><br><span class=\"line\"></span><br><span class=\"line\">import headerTop from <span class=\"string\">\"xxx/components/common/header\"</span>   //引入组件</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.component(<span class=\"string\">\"head-view\"</span>,headerTop);</span><br><span class=\"line\"> //第一个参数表示 head-view标签的内容都用第二个参数headerTop来代替</span><br><span class=\"line\"></span><br><span class=\"line\">然后在需要使用的vue文件中引入头部的话,只需要加入 &lt;head-view&gt;&lt;/head-view&gt;标签</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">(2)局部引入,需要用的时候才引入使用</span><br><span class=\"line\">在需要使用的VUE文件中引入头部:</span><br><span class=\"line\">代码片段</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">&lt;headerTopNav&gt;&lt;/headerTopNav&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"> import headerTopNav from <span class=\"string\">'xxx/components/common/header'</span>  //引入组件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> default&#123;</span><br><span class=\"line\">components: &#123;headerTopNav&#125; //表示headerTopNav标签的内容被headerTopNav组件代替</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">--------------------- </span><br><span class=\"line\">作者：Hobart-Ljw </span><br><span class=\"line\">来源：CSDN </span><br><span class=\"line\">原文：https://blog.csdn.net/baidu_32809053/article/details/80417783 </span><br><span class=\"line\">版权声明：本文为博主原创文章，转载请附上博文链接！</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue自定义公共组件</span><br><span class=\"line\"></span><br><span class=\"line\">我们在编写页面的时候,会存在公共的组件,比如头部和底部菜单</span><br><span class=\"line\"></span><br><span class=\"line\">我们拿公共头部为例子,想在每个页面都显示公共头部的实现方式有两种</span><br><span class=\"line\"></span><br><span class=\"line\">在src/components目录创建目录 common, 再创建header.vue</span><br><span class=\"line\"></span><br><span class=\"line\">header.vue的片段代码为</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h1&gt;header <span class=\"keyword\">in</span> here&lt;/h1&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"built_in\">export</span> default&#123;&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">(1)全局挂载组件</span><br><span class=\"line\">在main.js里挂载,通过Vue.component方式</span><br><span class=\"line\"></span><br><span class=\"line\">import headerTop from <span class=\"string\">\"xxx/components/common/header\"</span>   //引入组件</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.component(<span class=\"string\">\"head-view\"</span>,headerTop);</span><br><span class=\"line\"> //第一个参数表示 head-view标签的内容都用第二个参数headerTop来代替</span><br><span class=\"line\"></span><br><span class=\"line\">然后在需要使用的vue文件中引入头部的话,只需要加入 &lt;head-view&gt;&lt;/head-view&gt;标签</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">(2)局部引入,需要用的时候才引入使用</span><br><span class=\"line\">在需要使用的VUE文件中引入头部:</span><br><span class=\"line\">代码片段</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">&lt;headerTopNav&gt;&lt;/headerTopNav&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"> import headerTopNav from <span class=\"string\">'xxx/components/common/header'</span>  //引入组件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> default&#123;</span><br><span class=\"line\">components: &#123;headerTopNav&#125; //表示headerTopNav标签的内容被headerTopNav组件代替</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">--------------------- </span><br><span class=\"line\">作者：Hobart-Ljw </span><br><span class=\"line\">来源：CSDN </span><br><span class=\"line\">原文：https://blog.csdn.net/baidu_32809053/article/details/80417783 </span><br><span class=\"line\">版权声明：本文为博主原创文章，转载请附上博文链接！</span><br></pre></td></tr></table></figure>\n"},{"title":"新总统的第一天","author":"","date":"2019-05-25T06:46:00.000Z","_content":"你们每个人,都可以拿了毕业证、走下这个讲台,然后去追求锦衣玉食等等这个金钱社会视为理所当然的东西。你可以选择只关心自己的喜怒哀乐，把你的生活和国家的发展割裂开来。\n\n但我不希望你这样做.这不仅仅是因为你对那些没有你幸运的人负有责任，尽管你确实负有责任；也不仅仅是因为你对帮助你走到今天的人欠有债，尽管你确实欠下了债.\n\n这是因你:你对自己负有使命和责任。这是因为:我们个人的命运依赖于群体的命运。这是因为:如果你仅仅考虑你自己、满足眼前的需要，这是一种贫乏。这是因为:只有你把你自己的战车和其他一些更伟大的东西绑定到一起的时候,你才能发现你真正的能量，才能发现你为美国这个国家继续书写历史时所能扮演的角色\n\n奥巴马，在卫斯理大学毕业典礼上的演讲 2008年5月27日\n","source":"_posts/hello-world.md","raw":"title: 新总统的第一天\ntags:\n  - 生活\ncategories:\n  - 关于鸡汤\nauthor: ''\ndate: 2019-05-25 14:46:00\n---\n你们每个人,都可以拿了毕业证、走下这个讲台,然后去追求锦衣玉食等等这个金钱社会视为理所当然的东西。你可以选择只关心自己的喜怒哀乐，把你的生活和国家的发展割裂开来。\n\n但我不希望你这样做.这不仅仅是因为你对那些没有你幸运的人负有责任，尽管你确实负有责任；也不仅仅是因为你对帮助你走到今天的人欠有债，尽管你确实欠下了债.\n\n这是因你:你对自己负有使命和责任。这是因为:我们个人的命运依赖于群体的命运。这是因为:如果你仅仅考虑你自己、满足眼前的需要，这是一种贫乏。这是因为:只有你把你自己的战车和其他一些更伟大的东西绑定到一起的时候,你才能发现你真正的能量，才能发现你为美国这个国家继续书写历史时所能扮演的角色\n\n奥巴马，在卫斯理大学毕业典礼上的演讲 2008年5月27日\n","slug":"hello-world","published":1,"updated":"2019-05-25T09:32:58.845Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjyqnhyo70006w8u1s09ow20x","content":"<p>你们每个人,都可以拿了毕业证、走下这个讲台,然后去追求锦衣玉食等等这个金钱社会视为理所当然的东西。你可以选择只关心自己的喜怒哀乐，把你的生活和国家的发展割裂开来。</p>\n<p>但我不希望你这样做.这不仅仅是因为你对那些没有你幸运的人负有责任，尽管你确实负有责任；也不仅仅是因为你对帮助你走到今天的人欠有债，尽管你确实欠下了债.</p>\n<p>这是因你:你对自己负有使命和责任。这是因为:我们个人的命运依赖于群体的命运。这是因为:如果你仅仅考虑你自己、满足眼前的需要，这是一种贫乏。这是因为:只有你把你自己的战车和其他一些更伟大的东西绑定到一起的时候,你才能发现你真正的能量，才能发现你为美国这个国家继续书写历史时所能扮演的角色</p>\n<p>奥巴马，在卫斯理大学毕业典礼上的演讲 2008年5月27日</p>\n","site":{"data":{}},"excerpt":"","more":"<p>你们每个人,都可以拿了毕业证、走下这个讲台,然后去追求锦衣玉食等等这个金钱社会视为理所当然的东西。你可以选择只关心自己的喜怒哀乐，把你的生活和国家的发展割裂开来。</p>\n<p>但我不希望你这样做.这不仅仅是因为你对那些没有你幸运的人负有责任，尽管你确实负有责任；也不仅仅是因为你对帮助你走到今天的人欠有债，尽管你确实欠下了债.</p>\n<p>这是因你:你对自己负有使命和责任。这是因为:我们个人的命运依赖于群体的命运。这是因为:如果你仅仅考虑你自己、满足眼前的需要，这是一种贫乏。这是因为:只有你把你自己的战车和其他一些更伟大的东西绑定到一起的时候,你才能发现你真正的能量，才能发现你为美国这个国家继续书写历史时所能扮演的角色</p>\n<p>奥巴马，在卫斯理大学毕业典礼上的演讲 2008年5月27日</p>\n"},{"title":"关于 vue axios的封装","author":"葛亮均","date":"2019-07-30T03:19:43.000Z","_content":"安装\n``` bash\nnpm install axios -S\nnpm install --save axios vue-axios qs \n```\n环境配置（楼主没有配置需要全局的可以引入）\n``` bash\nimport axios from '../node_modules/axios'\nVue.prototype.$axios = axios;\n```\n新建 axios 文件夹下新建index.js\n内容如下：\n``` bash\nimport axios from 'axios'\nimport { Message } from 'element-ui'\nconst qs = require('qs')\nif (process.env.NODE_ENV == 'production') { //正式环境\n  axios.defaults.baseURL = 'http://192.168.1.254:8001/'\n  /* axios.defaults.baseURL = window.location.protocol + \"//\" +  window.location.host; */\n} else { //生产环境\n  axios.defaults.baseURL = 'http://192.168.1.48:5000/api/p/'\n}\n/* axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'; */ // 是否为from表单提交的传输对象 默认application/json\naxios.defaults.headers.common['Accept'] = 'application/json, */*'\naxios.interceptors.request.use(config => {\n  let token = window.sessionStorage.getItem('token') // token的获取\n  if (config.method === 'post' && config.headers['Content-Type'] != 'multipart/form-data') {\n    /* config.data = qs.stringify(config.data); */ // 表单提交json转字符串\n  }\n  if (token) { // 统一header传送tonken\n    config.headers.common['Access-Token'] = token\n  }\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => { // 报错统一处理\n  if (response.data.code === 500) {\n    Message({\n      message: response.data.message,\n      type: 'warning'\n    })\n  }\n  return response\n}, error => {\n  if (error.response.status == 401) { // 401 的处理\n    sessionStorage.removeItem('token')\n    return new Promise(() => {}) // pending的promise，中止promise链\n  }\n  return Promise.reject(error)\n})\nexport default axios\n\n```\n按需引入\n``` bash\nimport axios from '../../axios/index'\n```\n\nGET用法/POST用法\n``` bash\n list () {\n      let area = window.sessionStorage.getItem('area')\n      axios.get('organization/list?area=' + area).then(res => {\n        if (res.data.code === 200) {\n          this.medicalList = res.data.data.list\n        }\n      })\n    },\n    //post\n    axios.post('auth/login', params).then(res => {\n            if (res.data.code == 200) {\n              this.logining = false\n              sessionStorage.setItem('token', res.data.data.access)\n              let token = window.sessionStorage.getItem('token')\n              if (token) {\n                this.$router.push({path: '/home'})\n              }\n            } else {\n              this.$message({\n                type: 'error',\n                message: res,\n                center: true\n              })\n            }\n          })\n  ```","source":"_posts/于-vue-axios的封装.md","raw":"title: 关于 vue axios的封装\nauthor: 葛亮均\ndate: 2019-07-30 11:19:43\ntags:\n---\n安装\n``` bash\nnpm install axios -S\nnpm install --save axios vue-axios qs \n```\n环境配置（楼主没有配置需要全局的可以引入）\n``` bash\nimport axios from '../node_modules/axios'\nVue.prototype.$axios = axios;\n```\n新建 axios 文件夹下新建index.js\n内容如下：\n``` bash\nimport axios from 'axios'\nimport { Message } from 'element-ui'\nconst qs = require('qs')\nif (process.env.NODE_ENV == 'production') { //正式环境\n  axios.defaults.baseURL = 'http://192.168.1.254:8001/'\n  /* axios.defaults.baseURL = window.location.protocol + \"//\" +  window.location.host; */\n} else { //生产环境\n  axios.defaults.baseURL = 'http://192.168.1.48:5000/api/p/'\n}\n/* axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'; */ // 是否为from表单提交的传输对象 默认application/json\naxios.defaults.headers.common['Accept'] = 'application/json, */*'\naxios.interceptors.request.use(config => {\n  let token = window.sessionStorage.getItem('token') // token的获取\n  if (config.method === 'post' && config.headers['Content-Type'] != 'multipart/form-data') {\n    /* config.data = qs.stringify(config.data); */ // 表单提交json转字符串\n  }\n  if (token) { // 统一header传送tonken\n    config.headers.common['Access-Token'] = token\n  }\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => { // 报错统一处理\n  if (response.data.code === 500) {\n    Message({\n      message: response.data.message,\n      type: 'warning'\n    })\n  }\n  return response\n}, error => {\n  if (error.response.status == 401) { // 401 的处理\n    sessionStorage.removeItem('token')\n    return new Promise(() => {}) // pending的promise，中止promise链\n  }\n  return Promise.reject(error)\n})\nexport default axios\n\n```\n按需引入\n``` bash\nimport axios from '../../axios/index'\n```\n\nGET用法/POST用法\n``` bash\n list () {\n      let area = window.sessionStorage.getItem('area')\n      axios.get('organization/list?area=' + area).then(res => {\n        if (res.data.code === 200) {\n          this.medicalList = res.data.data.list\n        }\n      })\n    },\n    //post\n    axios.post('auth/login', params).then(res => {\n            if (res.data.code == 200) {\n              this.logining = false\n              sessionStorage.setItem('token', res.data.data.access)\n              let token = window.sessionStorage.getItem('token')\n              if (token) {\n                this.$router.push({path: '/home'})\n              }\n            } else {\n              this.$message({\n                type: 'error',\n                message: res,\n                center: true\n              })\n            }\n          })\n  ```","slug":"于-vue-axios的封装","published":1,"updated":"2019-07-30T03:29:53.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjyqnhyo80007w8u1chtfv04p","content":"<p>安装<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install axios -S</span><br><span class=\"line\">npm install --save axios vue-axios qs</span><br></pre></td></tr></table></figure></p>\n<p>环境配置（楼主没有配置需要全局的可以引入）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from <span class=\"string\">'../node_modules/axios'</span></span><br><span class=\"line\">Vue.prototype.<span class=\"variable\">$axios</span> = axios;</span><br></pre></td></tr></table></figure></p>\n<p>新建 axios 文件夹下新建index.js<br>内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from <span class=\"string\">'axios'</span></span><br><span class=\"line\">import &#123; Message &#125; from <span class=\"string\">'element-ui'</span></span><br><span class=\"line\">const qs = require(<span class=\"string\">'qs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> (process.env.NODE_ENV == <span class=\"string\">'production'</span>) &#123; //正式环境</span><br><span class=\"line\">  axios.defaults.baseURL = <span class=\"string\">'http://192.168.1.254:8001/'</span></span><br><span class=\"line\">  /* axios.defaults.baseURL = window.location.protocol + <span class=\"string\">\"//\"</span> +  window.location.host; */</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123; //生产环境</span><br><span class=\"line\">  axios.defaults.baseURL = <span class=\"string\">'http://192.168.1.48:5000/api/p/'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded'</span>; */ // 是否为from表单提交的传输对象 默认application/json</span><br><span class=\"line\">axios.defaults.headers.common[<span class=\"string\">'Accept'</span>] = <span class=\"string\">'application/json, */*'</span></span><br><span class=\"line\">axios.interceptors.request.use(config =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> token = window.sessionStorage.getItem(<span class=\"string\">'token'</span>) // token的获取</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (config.method === <span class=\"string\">'post'</span> &amp;&amp; config.headers[<span class=\"string\">'Content-Type'</span>] != <span class=\"string\">'multipart/form-data'</span>) &#123;</span><br><span class=\"line\">    /* config.data = qs.stringify(config.data); */ // 表单提交json转字符串</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (token) &#123; // 统一header传送tonken</span><br><span class=\"line\">    config.headers.common[<span class=\"string\">'Access-Token'</span>] = token</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> config</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> Promise.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">axios.interceptors.response.use(response =&gt; &#123; // 报错统一处理</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response.data.code === 500) &#123;</span><br><span class=\"line\">    Message(&#123;</span><br><span class=\"line\">      message: response.data.message,</span><br><span class=\"line\">      <span class=\"built_in\">type</span>: <span class=\"string\">'warning'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> response</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error.response.status == 401) &#123; // 401 的处理</span><br><span class=\"line\">    sessionStorage.removeItem(<span class=\"string\">'token'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> new Promise(() =&gt; &#123;&#125;) // pending的promise，中止promise链</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> Promise.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">export</span> default axios</span><br></pre></td></tr></table></figure></p>\n<p>按需引入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from <span class=\"string\">'../../axios/index'</span></span><br></pre></td></tr></table></figure></p>\n<p>GET用法/POST用法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">list</span></span> () &#123;</span><br><span class=\"line\">     <span class=\"built_in\">let</span> area = window.sessionStorage.getItem(<span class=\"string\">'area'</span>)</span><br><span class=\"line\">     axios.get(<span class=\"string\">'organization/list?area='</span> + area).<span class=\"keyword\">then</span>(res =&gt; &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (res.data.code === 200) &#123;</span><br><span class=\"line\">         this.medicalList = res.data.data.list</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;)</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   //post</span><br><span class=\"line\">   axios.post(<span class=\"string\">'auth/login'</span>, params).<span class=\"keyword\">then</span>(res =&gt; &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (res.data.code == 200) &#123;</span><br><span class=\"line\">             this.logining = <span class=\"literal\">false</span></span><br><span class=\"line\">             sessionStorage.setItem(<span class=\"string\">'token'</span>, res.data.data.access)</span><br><span class=\"line\">             <span class=\"built_in\">let</span> token = window.sessionStorage.getItem(<span class=\"string\">'token'</span>)</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (token) &#123;</span><br><span class=\"line\">               this.<span class=\"variable\">$router</span>.push(&#123;path: <span class=\"string\">'/home'</span>&#125;)</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">             this.<span class=\"variable\">$message</span>(&#123;</span><br><span class=\"line\">               <span class=\"built_in\">type</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">               message: res,</span><br><span class=\"line\">               center: <span class=\"literal\">true</span></span><br><span class=\"line\">             &#125;)</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;)</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>安装<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install axios -S</span><br><span class=\"line\">npm install --save axios vue-axios qs</span><br></pre></td></tr></table></figure></p>\n<p>环境配置（楼主没有配置需要全局的可以引入）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from <span class=\"string\">'../node_modules/axios'</span></span><br><span class=\"line\">Vue.prototype.<span class=\"variable\">$axios</span> = axios;</span><br></pre></td></tr></table></figure></p>\n<p>新建 axios 文件夹下新建index.js<br>内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from <span class=\"string\">'axios'</span></span><br><span class=\"line\">import &#123; Message &#125; from <span class=\"string\">'element-ui'</span></span><br><span class=\"line\">const qs = require(<span class=\"string\">'qs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> (process.env.NODE_ENV == <span class=\"string\">'production'</span>) &#123; //正式环境</span><br><span class=\"line\">  axios.defaults.baseURL = <span class=\"string\">'http://192.168.1.254:8001/'</span></span><br><span class=\"line\">  /* axios.defaults.baseURL = window.location.protocol + <span class=\"string\">\"//\"</span> +  window.location.host; */</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123; //生产环境</span><br><span class=\"line\">  axios.defaults.baseURL = <span class=\"string\">'http://192.168.1.48:5000/api/p/'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded'</span>; */ // 是否为from表单提交的传输对象 默认application/json</span><br><span class=\"line\">axios.defaults.headers.common[<span class=\"string\">'Accept'</span>] = <span class=\"string\">'application/json, */*'</span></span><br><span class=\"line\">axios.interceptors.request.use(config =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> token = window.sessionStorage.getItem(<span class=\"string\">'token'</span>) // token的获取</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (config.method === <span class=\"string\">'post'</span> &amp;&amp; config.headers[<span class=\"string\">'Content-Type'</span>] != <span class=\"string\">'multipart/form-data'</span>) &#123;</span><br><span class=\"line\">    /* config.data = qs.stringify(config.data); */ // 表单提交json转字符串</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (token) &#123; // 统一header传送tonken</span><br><span class=\"line\">    config.headers.common[<span class=\"string\">'Access-Token'</span>] = token</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> config</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> Promise.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">axios.interceptors.response.use(response =&gt; &#123; // 报错统一处理</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response.data.code === 500) &#123;</span><br><span class=\"line\">    Message(&#123;</span><br><span class=\"line\">      message: response.data.message,</span><br><span class=\"line\">      <span class=\"built_in\">type</span>: <span class=\"string\">'warning'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> response</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error.response.status == 401) &#123; // 401 的处理</span><br><span class=\"line\">    sessionStorage.removeItem(<span class=\"string\">'token'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> new Promise(() =&gt; &#123;&#125;) // pending的promise，中止promise链</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> Promise.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">export</span> default axios</span><br></pre></td></tr></table></figure></p>\n<p>按需引入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from <span class=\"string\">'../../axios/index'</span></span><br></pre></td></tr></table></figure></p>\n<p>GET用法/POST用法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">list</span></span> () &#123;</span><br><span class=\"line\">     <span class=\"built_in\">let</span> area = window.sessionStorage.getItem(<span class=\"string\">'area'</span>)</span><br><span class=\"line\">     axios.get(<span class=\"string\">'organization/list?area='</span> + area).<span class=\"keyword\">then</span>(res =&gt; &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (res.data.code === 200) &#123;</span><br><span class=\"line\">         this.medicalList = res.data.data.list</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;)</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   //post</span><br><span class=\"line\">   axios.post(<span class=\"string\">'auth/login'</span>, params).<span class=\"keyword\">then</span>(res =&gt; &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (res.data.code == 200) &#123;</span><br><span class=\"line\">             this.logining = <span class=\"literal\">false</span></span><br><span class=\"line\">             sessionStorage.setItem(<span class=\"string\">'token'</span>, res.data.data.access)</span><br><span class=\"line\">             <span class=\"built_in\">let</span> token = window.sessionStorage.getItem(<span class=\"string\">'token'</span>)</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (token) &#123;</span><br><span class=\"line\">               this.<span class=\"variable\">$router</span>.push(&#123;path: <span class=\"string\">'/home'</span>&#125;)</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">             this.<span class=\"variable\">$message</span>(&#123;</span><br><span class=\"line\">               <span class=\"built_in\">type</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">               message: res,</span><br><span class=\"line\">               center: <span class=\"literal\">true</span></span><br><span class=\"line\">             &#125;)</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;)</span><br></pre></td></tr></table></figure></p>\n"},{"title":"关于vue时间戳的封装","author":"葛亮均","date":"2019-07-30T02:41:38.000Z","_content":"在根目录新建util.js//\n``` bash\nDate.prototype.format = function (fmt) {\n  var o = {\n    'M+': this.getMonth() + 1, // 月份\n    'd+': this.getDate(), // 日\n    'h+': this.getHours(), // 小时\n    'm+': this.getMinutes(), // 分\n    's+': this.getSeconds(), // 秒\n    'q+': Math.floor((this.getMonth() + 3) / 3), // 季度\n    'S': this.getMilliseconds() // 毫秒\n  }\n  if (/(y+)/.test(fmt)) { fmt = fmt.replace(RegExp.$1, (this.getFullYear() + '').substr(4 - RegExp.$1.length)) }\n  for (var k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) { fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length))) }\n  }\n  return fmt\n}\n\nexport function parseUrl (url) {\n  let obj = {}\n  if (url.includes('?')) {\n    let paramString = url.split('?')[1]\n    if (paramString.includes('&')) {\n      let paramArray = paramString.split('&')\n      for (let param in paramArray) {\n        let keyvalue = paramArray[param].split('=')\n        let key = keyvalue[0]\n        let value = keyvalue[1]\n        obj[key] = value\n      }\n    } else {\n      let keyvalue = paramString.split('=')\n      let key = keyvalue[0]\n      let value = keyvalue[1]\n      obj[key] = value\n    }\n  }\n  return obj\n}\n\nDate.prototype.getAgoDate = function (type, number) {\n  switch (type) {\n    case 'day': this.setDate(this.getDate() - Number(number)); break\n    case 'month': this.setMonth(this.getMonth() - Number(number)); break\n    case 'year': this.setFullYear(this.getFullYear() - Number(number)); break\n  }\n  return this\n}\n\nDate.prototype.startTime = function (type, number) {\n  return new Date(this.getAgoDate(type, number).toLocaleDateString()).getTime()\n}\n\nDate.prototype.endTime = function (type, number) {\n  return new Date(this.getAgoDate(type, number).toLocaleDateString()).getTime() + 86400000 - 1\n}\n\nDate.prototype.getFirstDayInMonth = function () {\n  this.setDate(1)\n  return this\n}\n```\n在需要的vue引入\n\n![在需要的vue引入](/images/pasted-1.png)\n\n在方法里面新建\n\n![upload successful](/images/pasted-2.png)\n\n在时间戳需要转换时候\n``` bash\n<td>{{getCreatedTime(medical.created)}}</td>\n```","source":"_posts/关于vue时间戳的封装.md","raw":"title: 关于vue时间戳的封装\nauthor: 葛亮均\ndate: 2019-07-30 10:41:38\ntags:\n---\n在根目录新建util.js//\n``` bash\nDate.prototype.format = function (fmt) {\n  var o = {\n    'M+': this.getMonth() + 1, // 月份\n    'd+': this.getDate(), // 日\n    'h+': this.getHours(), // 小时\n    'm+': this.getMinutes(), // 分\n    's+': this.getSeconds(), // 秒\n    'q+': Math.floor((this.getMonth() + 3) / 3), // 季度\n    'S': this.getMilliseconds() // 毫秒\n  }\n  if (/(y+)/.test(fmt)) { fmt = fmt.replace(RegExp.$1, (this.getFullYear() + '').substr(4 - RegExp.$1.length)) }\n  for (var k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) { fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length))) }\n  }\n  return fmt\n}\n\nexport function parseUrl (url) {\n  let obj = {}\n  if (url.includes('?')) {\n    let paramString = url.split('?')[1]\n    if (paramString.includes('&')) {\n      let paramArray = paramString.split('&')\n      for (let param in paramArray) {\n        let keyvalue = paramArray[param].split('=')\n        let key = keyvalue[0]\n        let value = keyvalue[1]\n        obj[key] = value\n      }\n    } else {\n      let keyvalue = paramString.split('=')\n      let key = keyvalue[0]\n      let value = keyvalue[1]\n      obj[key] = value\n    }\n  }\n  return obj\n}\n\nDate.prototype.getAgoDate = function (type, number) {\n  switch (type) {\n    case 'day': this.setDate(this.getDate() - Number(number)); break\n    case 'month': this.setMonth(this.getMonth() - Number(number)); break\n    case 'year': this.setFullYear(this.getFullYear() - Number(number)); break\n  }\n  return this\n}\n\nDate.prototype.startTime = function (type, number) {\n  return new Date(this.getAgoDate(type, number).toLocaleDateString()).getTime()\n}\n\nDate.prototype.endTime = function (type, number) {\n  return new Date(this.getAgoDate(type, number).toLocaleDateString()).getTime() + 86400000 - 1\n}\n\nDate.prototype.getFirstDayInMonth = function () {\n  this.setDate(1)\n  return this\n}\n```\n在需要的vue引入\n\n![在需要的vue引入](/images/pasted-1.png)\n\n在方法里面新建\n\n![upload successful](/images/pasted-2.png)\n\n在时间戳需要转换时候\n``` bash\n<td>{{getCreatedTime(medical.created)}}</td>\n```","slug":"关于vue时间戳的封装","published":1,"updated":"2019-07-30T03:14:21.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjyqnhyo90008w8u1kxuvm4dt","content":"<p>在根目录新建util.js//<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Date.prototype.format = <span class=\"keyword\">function</span> (fmt) &#123;</span><br><span class=\"line\">  var o = &#123;</span><br><span class=\"line\">    <span class=\"string\">'M+'</span>: this.getMonth() + 1, // 月份</span><br><span class=\"line\">    <span class=\"string\">'d+'</span>: this.getDate(), // 日</span><br><span class=\"line\">    <span class=\"string\">'h+'</span>: this.getHours(), // 小时</span><br><span class=\"line\">    <span class=\"string\">'m+'</span>: this.getMinutes(), // 分</span><br><span class=\"line\">    <span class=\"string\">'s+'</span>: this.getSeconds(), // 秒</span><br><span class=\"line\">    <span class=\"string\">'q+'</span>: Math.floor((this.getMonth() + 3) / 3), // 季度</span><br><span class=\"line\">    <span class=\"string\">'S'</span>: this.getMilliseconds() // 毫秒</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (/(y+)/.<span class=\"built_in\">test</span>(fmt)) &#123; fmt = fmt.replace(RegExp.<span class=\"variable\">$1</span>, (this.getFullYear() + <span class=\"string\">''</span>).substr(4 - RegExp.<span class=\"variable\">$1</span>.length)) &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (var k <span class=\"keyword\">in</span> o) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (new RegExp(<span class=\"string\">'('</span> + k + <span class=\"string\">')'</span>).<span class=\"built_in\">test</span>(fmt)) &#123; fmt = fmt.replace(RegExp.<span class=\"variable\">$1</span>, (RegExp.<span class=\"variable\">$1</span>.length == 1) ? (o[k]) : ((<span class=\"string\">'00'</span> + o[k]).substr((<span class=\"string\">''</span> + o[k]).length))) &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> fmt</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"keyword\">function</span> parseUrl (url) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (url.includes(<span class=\"string\">'?'</span>)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">let</span> paramString = url.split(<span class=\"string\">'?'</span>)[1]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (paramString.includes(<span class=\"string\">'&amp;'</span>)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">let</span> paramArray = paramString.split(<span class=\"string\">'&amp;'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> param <span class=\"keyword\">in</span> paramArray) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> keyvalue = paramArray[param].split(<span class=\"string\">'='</span>)</span><br><span class=\"line\">        <span class=\"built_in\">let</span> key = keyvalue[0]</span><br><span class=\"line\">        <span class=\"built_in\">let</span> value = keyvalue[1]</span><br><span class=\"line\">        obj[key] = value</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">let</span> keyvalue = paramString.split(<span class=\"string\">'='</span>)</span><br><span class=\"line\">      <span class=\"built_in\">let</span> key = keyvalue[0]</span><br><span class=\"line\">      <span class=\"built_in\">let</span> value = keyvalue[1]</span><br><span class=\"line\">      obj[key] = value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> obj</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date.prototype.getAgoDate = <span class=\"keyword\">function</span> (<span class=\"built_in\">type</span>, number) &#123;</span><br><span class=\"line\">  switch (<span class=\"built_in\">type</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'day'</span>: this.setDate(this.getDate() - Number(number)); <span class=\"built_in\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'month'</span>: this.setMonth(this.getMonth() - Number(number)); <span class=\"built_in\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'year'</span>: this.setFullYear(this.getFullYear() - Number(number)); <span class=\"built_in\">break</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> this</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date.prototype.startTime = <span class=\"keyword\">function</span> (<span class=\"built_in\">type</span>, number) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> new Date(this.getAgoDate(<span class=\"built_in\">type</span>, number).toLocaleDateString()).getTime()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date.prototype.endTime = <span class=\"keyword\">function</span> (<span class=\"built_in\">type</span>, number) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> new Date(this.getAgoDate(<span class=\"built_in\">type</span>, number).toLocaleDateString()).getTime() + 86400000 - 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date.prototype.getFirstDayInMonth = <span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">  this.setDate(1)</span><br><span class=\"line\">  <span class=\"built_in\">return</span> this</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在需要的vue引入</p>\n<p><img src=\"/images/pasted-1.png\" alt=\"在需要的vue引入\"></p>\n<p>在方法里面新建</p>\n<p><img src=\"/images/pasted-2.png\" alt=\"upload successful\"></p>\n<p>在时间戳需要转换时候<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;td&gt;&#123;&#123;getCreatedTime(medical.created)&#125;&#125;&lt;/td&gt;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在根目录新建util.js//<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Date.prototype.format = <span class=\"keyword\">function</span> (fmt) &#123;</span><br><span class=\"line\">  var o = &#123;</span><br><span class=\"line\">    <span class=\"string\">'M+'</span>: this.getMonth() + 1, // 月份</span><br><span class=\"line\">    <span class=\"string\">'d+'</span>: this.getDate(), // 日</span><br><span class=\"line\">    <span class=\"string\">'h+'</span>: this.getHours(), // 小时</span><br><span class=\"line\">    <span class=\"string\">'m+'</span>: this.getMinutes(), // 分</span><br><span class=\"line\">    <span class=\"string\">'s+'</span>: this.getSeconds(), // 秒</span><br><span class=\"line\">    <span class=\"string\">'q+'</span>: Math.floor((this.getMonth() + 3) / 3), // 季度</span><br><span class=\"line\">    <span class=\"string\">'S'</span>: this.getMilliseconds() // 毫秒</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (/(y+)/.<span class=\"built_in\">test</span>(fmt)) &#123; fmt = fmt.replace(RegExp.<span class=\"variable\">$1</span>, (this.getFullYear() + <span class=\"string\">''</span>).substr(4 - RegExp.<span class=\"variable\">$1</span>.length)) &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (var k <span class=\"keyword\">in</span> o) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (new RegExp(<span class=\"string\">'('</span> + k + <span class=\"string\">')'</span>).<span class=\"built_in\">test</span>(fmt)) &#123; fmt = fmt.replace(RegExp.<span class=\"variable\">$1</span>, (RegExp.<span class=\"variable\">$1</span>.length == 1) ? (o[k]) : ((<span class=\"string\">'00'</span> + o[k]).substr((<span class=\"string\">''</span> + o[k]).length))) &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> fmt</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"keyword\">function</span> parseUrl (url) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (url.includes(<span class=\"string\">'?'</span>)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">let</span> paramString = url.split(<span class=\"string\">'?'</span>)[1]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (paramString.includes(<span class=\"string\">'&amp;'</span>)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">let</span> paramArray = paramString.split(<span class=\"string\">'&amp;'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> param <span class=\"keyword\">in</span> paramArray) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> keyvalue = paramArray[param].split(<span class=\"string\">'='</span>)</span><br><span class=\"line\">        <span class=\"built_in\">let</span> key = keyvalue[0]</span><br><span class=\"line\">        <span class=\"built_in\">let</span> value = keyvalue[1]</span><br><span class=\"line\">        obj[key] = value</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">let</span> keyvalue = paramString.split(<span class=\"string\">'='</span>)</span><br><span class=\"line\">      <span class=\"built_in\">let</span> key = keyvalue[0]</span><br><span class=\"line\">      <span class=\"built_in\">let</span> value = keyvalue[1]</span><br><span class=\"line\">      obj[key] = value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> obj</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date.prototype.getAgoDate = <span class=\"keyword\">function</span> (<span class=\"built_in\">type</span>, number) &#123;</span><br><span class=\"line\">  switch (<span class=\"built_in\">type</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'day'</span>: this.setDate(this.getDate() - Number(number)); <span class=\"built_in\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'month'</span>: this.setMonth(this.getMonth() - Number(number)); <span class=\"built_in\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'year'</span>: this.setFullYear(this.getFullYear() - Number(number)); <span class=\"built_in\">break</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> this</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date.prototype.startTime = <span class=\"keyword\">function</span> (<span class=\"built_in\">type</span>, number) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> new Date(this.getAgoDate(<span class=\"built_in\">type</span>, number).toLocaleDateString()).getTime()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date.prototype.endTime = <span class=\"keyword\">function</span> (<span class=\"built_in\">type</span>, number) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> new Date(this.getAgoDate(<span class=\"built_in\">type</span>, number).toLocaleDateString()).getTime() + 86400000 - 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date.prototype.getFirstDayInMonth = <span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">  this.setDate(1)</span><br><span class=\"line\">  <span class=\"built_in\">return</span> this</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在需要的vue引入</p>\n<p><img src=\"/images/pasted-1.png\" alt=\"在需要的vue引入\"></p>\n<p>在方法里面新建</p>\n<p><img src=\"/images/pasted-2.png\" alt=\"upload successful\"></p>\n<p>在时间戳需要转换时候<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;td&gt;&#123;&#123;getCreatedTime(medical.created)&#125;&#125;&lt;/td&gt;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"关于vueX的状态管理","author":"葛亮均","date":"2019-07-30T03:32:00.000Z","_content":"楼主有点懒","source":"_posts/于vueX的状态管理.md","raw":"title: 关于vueX的状态管理\nauthor: 葛亮均\ntags:\n  - 技术\ncategories:\n  - vue\ndate: 2019-07-30 11:32:00\n---\n楼主有点懒","slug":"于vueX的状态管理","published":1,"updated":"2019-07-30T03:32:40.419Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjyqnhyoe000cw8u1scc6qmwp","content":"<p>楼主有点懒</p>\n","site":{"data":{}},"excerpt":"","more":"<p>楼主有点懒</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjyqnhyo00002w8u1qkop78do","category_id":"cjyqnhyo50004w8u1ba1wxsao","_id":"cjyqnhyof000dw8u1dkmtm8vy"},{"post_id":"cjyqnhyo70006w8u1s09ow20x","category_id":"cjyqnhyod0009w8u1dlpo2wwp","_id":"cjyqnhyog000iw8u1daym6jau"},{"post_id":"cjyqnhyoe000cw8u1scc6qmwp","category_id":"cjyqnhyog000fw8u14r6y2iku","_id":"cjyqnhyoh000kw8u1epz8mlzy"}],"PostTag":[{"post_id":"cjyqnhyo00002w8u1qkop78do","tag_id":"cjyqnhyo60005w8u1m66fk00w","_id":"cjyqnhyoe000bw8u1f13rt2co"},{"post_id":"cjyqnhyoe000cw8u1scc6qmwp","tag_id":"cjyqnhyo60005w8u1m66fk00w","_id":"cjyqnhyog000gw8u1l1fj0gd2"},{"post_id":"cjyqnhyo30003w8u15kk4sj2m","tag_id":"cjyqnhyo60005w8u1m66fk00w","_id":"cjyqnhyog000hw8u1zt4aele3"},{"post_id":"cjyqnhyo70006w8u1s09ow20x","tag_id":"cjyqnhyof000ew8u16aof75w8","_id":"cjyqnhyoh000jw8u16d8xkz4w"}],"Tag":[{"name":"技术","_id":"cjyqnhyo60005w8u1m66fk00w"},{"name":"生活","_id":"cjyqnhyof000ew8u16aof75w8"}]}}